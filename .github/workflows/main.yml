name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set_artifact.id }}
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Backend dependencies and setup
    - name: Cache backend dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install backend dependencies
      run: |
        npm install
        npm install -g jest

    # Frontend dependencies and setup
    - name: Cache frontend dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-frontend-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-frontend-

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
        npm install -g eslint
        cd ..

    # Lint Check
    - name: Run ESLint
      run: |
        cd frontend
        npx eslint . --ext .js,.jsx,.ts,.tsx || echo "Linting completed with warnings"
        cd ..

   
